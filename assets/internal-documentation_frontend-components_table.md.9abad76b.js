import{_ as t,c as e,o as n,a}from"./app.73ebf130.js";const f=JSON.parse('{"title":"Table","description":"Create a table","frontmatter":{"description":"Create a table"},"headers":[],"relativePath":"internal-documentation/frontend-components/table.md"}'),l={name:"internal-documentation/frontend-components/table.md"},s=a(`<h1 id="table" tabindex="-1">Table <a class="header-anchor" href="#table" aria-hidden="true">#</a></h1><h4 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h4><div class="language-jsx"><button class="copy"></button><span class="lang">jsx</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> Table </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">components/Table/Table.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-jsx"><button class="copy"></button><span class="lang">jsx</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Table</span><span style="color:#89DDFF;"> /&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h4><h4 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;"><strong>name</strong></th><th style="text-align:left;"><strong>Description</strong></th><th style="text-align:left;"><strong>Type</strong></th><th style="text-align:left;"><strong>Default</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>columns</strong></td><td style="text-align:left;"></td><td style="text-align:left;">ReactNode</td><td style="text-align:left;">null</td></tr><tr><td style="text-align:left;"><strong>onAdd</strong></td><td style="text-align:left;">If defined a add button appear and clicking on it call this callback.</td><td style="text-align:left;">Function</td><td style="text-align:left;">null</td></tr><tr><td style="text-align:left;"><strong>addText</strong></td><td style="text-align:left;">Button content</td><td style="text-align:left;">ReactNode</td><td style="text-align:left;">null</td></tr><tr><td style="text-align:left;"><strong>onSearch</strong></td><td style="text-align:left;">Called when search bar is changed. Return a Promise that resolve with a list of users. Argument is (query: string, maxResult: number)=&gt;{return new Promise(...)}</td><td style="text-align:left;">Function</td><td style="text-align:left;">null</td></tr><tr><td style="text-align:left;"><strong>onRequestNextPage, onRequestPreviousPage</strong></td><td style="text-align:left;">(token: string, maxResult: number)=&gt;{return new Promise(...)}</td><td style="text-align:left;">Function</td><td style="text-align:left;">null</td></tr><tr><td style="text-align:left;"><strong>rowKey</strong></td><td style="text-align:left;">(row)=&gt;return <a href="http://row.id" target="_blank" rel="noreferrer">row.id</a></td><td style="text-align:left;">Function</td><td style="text-align:left;">null</td></tr></tbody></table><p><strong>Functions (callable on the component from parent)</strong></p><table><thead><tr><th style="text-align:left;"><strong>name</strong></th><th style="text-align:left;"><strong>Description</strong></th><th style="text-align:left;"><strong>Type</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>newElements(elements)</strong></td><td style="text-align:left;">Add new rows at the beginning of the table.</td><td style="text-align:left;">Function</td></tr></tbody></table><p><strong>Internal implementation</strong></p><ul><li>If no data in table, set loading to true, call onRequestNextPage without offset token.</li><li>If next page button is clicked, get last row token, set Table to loading, and requestNextPage.</li><li>When recieve result in requestNextPage, set loading to false and update data.</li><li>Table must memorize already loaded pages to be faster</li><li>Table must detect when request a page and no result is returned in this case disable corresponding button.</li></ul>`,11),o=[s];function r(d,i,g,c,p,u){return n(),e("div",null,o)}const y=t(l,[["render",r]]);export{f as __pageData,y as default};
